from django.core.management.base import BaseCommand, CommandError
from django.db.models import Q

import talib
import numpy as np
import os
import re

from shares.model.shares_join_block import SharesJoinBlock
from shares.model.shares_name import SharesName
from shares.model.shares_macd import SharesMacd
from shares.management.commands.wencai2 import rediangainnian, zhangTing
from shares.model.shares_date import SharesDate
from datetime import datetime, timedelta
from shares.model.shares_date_listen import SharesDateListen
from shares.model.shares_buys import SharesBuys
from shares.model.shares_zhang_tings import SharesZhangTings
from shares.model.shares import Shares


def time2seconds(time_str):
    time_format = '%H:%M:%S'  # 时间字符串的格式
    time_obj = datetime.strptime(time_str, time_format)
    return timedelta(hours=time_obj.hour, minutes=time_obj.minute, seconds=time_obj.second).total_seconds()


"""
使用macd对大盘复盘
按照波段统计上涨天数和上涨家数
"""


class Command(BaseCommand):
    help = "对每天进行复盘"

    etfs = []
    gns = []
    gps = []
    codes = []
    dates = []
    date = ""

    fp = 1
    fp_start = "2024-01-01"
    fp_end = ""
    fp_dates = "2024-04-01"

    stop = False

    data = {
        "a": [],
        "a50": [],
        "hs300": [],
        "zt500": [],
        "zt1000": [],
        "zt2000": [],
    }

    def computeBoDuan(self, data):
        # print(data)
        macdDIFF, macdDEA, macds = self.macd(data)
        # print(macds)
        i = 0
        j = 0
        boduan = []
        if macds[2] > macds[1] > macds[0]:
            boduan.append({
                "p": "up",
                "d": self.dates[0],
                "next": 0
            })

        else:
            boduan.append({
                "p": "down",
                "d": self.dates[0],
                "next": 0
            })

        for macd in macds:

            if i == 0:
                i = i + 1
                continue
            if macd is None:
                i = i + 1
                continue
            if i + 2 >= len(macds):
                break
            if macds[i] > macds[i - 1]:
                """
                上行波段
                """
                if macds[i] > macds[i - 1] and macds[i] > macds[i + 1] > macds[i + 2]:
                    """
                    顶部反转
                    """
                    boduan.append({
                        "p": "up-down",
                        "macd": macd,
                        "d": self.dates[i],
                        "data": data[i],
                        "next": 0
                    })

                elif macds[i - 1] < 0 and macds[i] > 0:
                    """
                    负转正，二波
                    """
                    boduan.append({
                        "p": "up",
                        "macd": macd,
                        "d": self.dates[i],
                        "data": data[i],
                        "next": 1
                    })

            elif macds[i] < macds[i - 1]:
                """
                下行波段
                """
                if macds[i] < macds[i - 1] and macds[i] < macds[i + 1] < macds[i + 2]:
                    """
                    底部反转
                    """
                    boduan.append({
                        "p": "down-up",
                        "macd": macd,
                        "d": self.dates[i],
                        "data": data[i],
                        "next": 0
                    })

                elif macds[i - 1] > 0 and macds[i] < 0:
                    """
                    正转负，二波
                    """
                    boduan.append({
                        "p": "down",
                        "macd": macd,
                        "d": self.dates[i],
                        "data": data[i],
                        "next": 1
                    })
            i = i + 1
        return boduan

    def handle(self, *args, **options):
        self.date = "20240404"

        boduan = []
        boduan.append({
            "code": "zt2000",
            "data": self.zt2000()
        })

        for item in boduan:
            print(item["code"])
            data = item["data"]

            for i in range(len(item["data"])):
                if i + 1 == len(item["data"]):
                    continue
                sz = xd = p = sz2 = xd2 = p2 = 0
                for j in range(len(self.data[item["code"]])):
                    if j + 1 == len(self.data[item["code"]]):
                        continue
                    d1 = self.data[item["code"]][j].split(",")
                    d2 = self.data[item["code"]][j + 1].split(",")

                    new_date_str = d1[0]
                    # 处于区间内
                    if data[i]['d'] >= new_date_str or new_date_str > data[i + 1]['d']:
                        continue
                    if d2[1] > d1[1]:
                        sz = sz + 1
                    elif d2[1] < d1[1]:
                        xd = xd + 1
                    else:
                        p = 0

                    if len(self.codeList) > 0:
                        szs = len(Shares.objects.filter(p_range__gt=0, code__in=self.codeList, date_as=new_date_str))
                        xds = len(Shares.objects.filter(p_range__lt=0, code__in=self.codeList, date_as=new_date_str))
                    else:
                        szs = len(Shares.objects.filter(p_range__gt=0, date_as=new_date_str))
                        xds = len(Shares.objects.filter(p_range__lt=0, date_as=new_date_str))
                    if szs > xds:
                        sz2 = sz2 + 1
                    elif szs < xds:
                        xd2 = xd2 + 1
                    else:
                        p2 = 0

                print(
                    "%s - %s : %s, 价格： 上涨 %s, 下跌 %s, 平 %s， 数量： 上涨 %s, 下跌 %s, 平 %s" % (
                        data[i]['d'], data[i + 1]['d'], data[i]['p'],
                        sz, xd, p,
                        sz2, xd2, p2
                    )
                )

    def macd(self, data):
        # 计算kd指标
        close_prices = np.array([float(item) for item in data])
        # print(close_prices)
        # exit()
        macdDIFF, macdDEA, macd = talib.MACDEXT(close_prices, fastperiod=12, fastmatype=1, slowperiod=26,
                                                slowmatype=1,
                                                signalperiod=9, signalmatype=1)
        macd = macd * 2
        return (macdDIFF, macdDEA, macd)

    def computeMacd(self, data):
        macdDIFF, macdDEA, macd = self.macd(data)
        last = macd[len(macd) - 1]
        last2 = macd[len(macd) - 2]
        last3 = macd[len(macd) - 3]
        if last > 0:
            return True
        elif last < 0:
            if last > last2 > last3:
                return True
            elif last < last2:
                self.stop = True
                return False
        return True

    def a(self):
        """
        对大盘进行复盘
        :return:
        """
        self.stop = False
        data = self.data["a"]
        if len(self.data["a"]) == 0:
            data = self.data["a"] = rediangainnian.zhishu("1.000001")

        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # print(self.dates)
        self.codeList = []
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]

        # print(self.dates)
        # exit()
        return self.computeBoDuan(data)

    def etf(self):
        """
        对 中证A50， 沪深300，中证500，中证1000，中证2000
        :return:
        """
        self.etfs = []
        # https://www.csindex.com.cn/#/indices/family/list?index_series=3
        if self.A50():
            self.etfs.append("a50")
        if self.hs300():
            self.etfs.append("hs300")
        if self.zt500():
            self.etfs.append("zt500")
        if self.zt1000():
            self.etfs.append("zt1000")
        if self.zt2000():
            self.etfs.append("zt2000")

    def A50(self):
        """
        对 A50 复盘
        :return:
        """
        data = self.data["a50"]
        if len(self.data["a50"]) == 0:
            data = self.data["a50"] = rediangainnian.zhishu("1.000016")
        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # http://www.sse.com.cn/market/sseindex/indexlist/basic/index.shtml?COMPANY_CODE=000016&INDEX_Code=000016&type=1
        # print(self.dates)
        self.codeList = ['600028', '600030', '600031', '600036', '600048', '600050', '600089', '600104', '600111',
                         '600150', '600276', '600309', '600406', '600436', '600438', '600519', '600690', '600809',
                         '600887', '600893', '600900', '600905', '601012', '601088', '601166', '601225', '601288',
                         '601318', '601390', '601398', '601601', '601628', '601633', '601668', '601669', '601728',
                         '601857', '601888', '601899', '601919', '601988', '603259', '603288', '603501', '603799',
                         '603986', '688041', '688111', '688599', '688981']
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]

        return self.computeBoDuan(data)

    def hs300(self):
        """
        对 沪深300 复盘
        :return:
        """
        data = self.data["hs300"]
        if len(self.data["hs300"]) == 0:
            data = self.data["hs300"] = rediangainnian.zhishu("1.000300")
        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # print(self.dates)
        self.codeList = [
            '000001', '000002', '000063', '000069', '000100', '000157', '000166', '000301', '000333', '000338',
            '000408', '000425', '000538', '000568', '000596', '000617', '000625', '000651', '000661', '000708',
            '000725', '000733', '000768', '000776', '000786', '000792', '000800', '000858', '000876', '000877',
            '000895', '000938', '000963', '000977', '000983', '000999', '001289', '001979', '002001', '002007',
            '002027', '002049', '002050', '002074', '002129', '002142', '002179', '002180', '002202', '002230',
            '002236', '002241', '002252', '002271', '002304', '002311', '002352', '002371', '002410', '002415',
            '002459', '002460', '002466', '002475', '002493', '002555', '002594', '002601', '002603', '002648',
            '002709', '002714', '002736', '002812', '002821', '002841', '002916', '002920', '002938', '003816',
            '300014', '300015', '300033', '300059', '300122', '300124', '300142', '300223', '300274', '300308',
            '300316', '300347', '300408', '300413', '300433', '300450', '300454', '300496', '300498', '300628',
            '300661', '300750', '300751', '300759', '300760', '300763', '300782', '300896', '300919', '300957',
            '300979', '300999', '301269', '600000', '600009', '600010', '600011', '600015', '600016', '600018',
            '600019', '600023', '600025', '600028', '600029', '600030', '600031', '600036', '600039', '600048',
            '600050', '600061', '600085', '600089', '600104', '600111', '600115', '600132', '600150', '600176',
            '600183', '600188', '600196', '600219', '600233', '600276', '600309', '600332', '600346', '600362',
            '600372', '600406', '600426', '600436', '600438', '600460', '600489', '600515', '600519', '600547',
            '600570', '600584', '600585', '600588', '600600', '600606', '600660', '600674', '600690', '600732',
            '600741', '600745', '600754', '600760', '600795', '600803', '600809', '600837', '600845', '600875',
            '600886', '600887', '600893', '600900', '600905', '600918', '600919', '600926', '600938', '600941',
            '600958', '600989', '600999', '601006', '601009', '601012', '601021', '601059', '601066', '601088',
            '601100', '601111', '601117', '601138', '601155', '601166', '601169', '601186', '601211', '601225',
            '601229', '601236', '601238', '601288', '601318', '601319', '601328', '601336', '601360', '601377',
            '601390', '601398', '601600', '601601', '601607', '601615', '601618', '601628', '601633', '601658',
            '601668', '601669', '601688', '601689', '601698', '601699', '601728', '601766', '601788', '601799',
            '601800', '601808', '601816', '601818', '601838', '601857', '601865', '601868', '601872', '601877',
            '601878', '601881', '601888', '601898', '601899', '601901', '601916', '601919', '601939', '601985',
            '601988', '601989', '601995', '601998', '603019', '603195', '603259', '603260', '603288', '603290',
            '603369', '603392', '603486', '603501', '603659', '603799', '603806', '603833', '603899', '603986',
            '603993', '605117', '605499', '688008', '688012', '688036', '688041', '688065', '688111', '688126',
            '688187', '688223', '688256', '688271', '688303', '688363', '688396', '688561', '688599', '688981'
        ]
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]
        return self.computeBoDuan(data)

    def zt500(self):
        """
        对中小板复盘
        :return:
        """
        data = self.data["zt500"]
        if len(self.data["zt500"]) == 0:
            data = self.data["zt500"] = rediangainnian.zhishu("1.000905")
        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # print(self.dates)
        self.codeList = [
            '000009', '000021', '000027', '000031', '000039', '000050', '000060', '000066', '000089', '000155',
            '000156', '000400', '000401', '000402', '000423', '000513', '000519', '000537', '000539', '000547',
            '000553', '000559', '000563', '000581', '000591', '000598', '000623', '000629', '000630', '000636',
            '000683', '000703', '000709', '000723', '000728', '000729', '000738', '000739', '000750', '000778',
            '000783', '000785', '000825', '000830', '000831', '000878', '000883', '000887', '000893', '000898',
            '000930', '000932', '000933', '000937', '000958', '000959', '000960', '000967', '000970', '000975',
            '000987', '000988', '000997', '000998', '001203', '001227', '001286', '001872', '001914', '002008',
            '002010', '002019', '002025', '002028', '002030', '002032', '002044', '002056', '002064', '002065',
            '002078', '002080', '002092', '002120', '002128', '002131', '002138', '002152', '002153', '002155',
            '002156', '002185', '002192', '002195', '002203', '002223', '002240', '002244', '002262', '002266',
            '002268', '002273', '002281', '002294', '002299', '002326', '002340', '002353', '002368', '002372',
            '002373', '002384', '002385', '002399', '002407', '002408', '002409', '002414', '002422', '002423',
            '002429', '002430', '002432', '002439', '002444', '002463', '002465', '002468', '002472', '002487',
            '002497', '002500', '002505', '002506', '002507', '002508', '002511', '002517', '002518', '002531',
            '002532', '002557', '002558', '002563', '002568', '002572', '002595', '002600', '002607', '002608',
            '002624', '002625', '002653', '002670', '002673', '002683', '002690', '002738', '002739', '002756',
            '002761', '002791', '002797', '002831', '002850', '002865', '002867', '002925', '002926', '002936',
            '002939', '002945', '002958', '002966', '003022', '003031', '003035', '300001', '300003', '300009',
            '300012', '300017', '300024', '300026', '300037', '300058', '300070', '300073', '300088', '300114',
            '300118', '300136', '300144', '300146', '300207', '300212', '300244', '300251', '300253', '300257',
            '300285', '300296', '300357', '300363', '300373', '300383', '300390', '300394', '300395', '300418',
            '300438', '300474', '300487', '300502', '300529', '300558', '300568', '300595', '300601', '300604',
            '300676', '300677', '300682', '300699', '300724', '300748', '300776', '300850', '300861', '300866',
            '300888', '301029', '301236', '600004', '600008', '600021', '600022', '600032', '600038', '600056',
            '600060', '600062', '600066', '600079', '600095', '600096', '600109', '600118', '600126', '600129',
            '600131', '600141', '600143', '600153', '600155', '600157', '600160', '600161', '600166', '600167',
            '600170', '600177', '600208', '600258', '600271', '600282', '600298', '600299', '600315', '600316',
            '600325', '600329', '600339', '600348', '600350', '600352', '600369', '600373', '600377', '600378',
            '600380', '600390', '600392', '600398', '600399', '600415', '600416', '600418', '600435', '600481',
            '600482', '600486', '600497', '600498', '600499', '600500', '600511', '600516', '600517', '600521',
            '600528', '600529', '600535', '600536', '600546', '600549', '600563', '600566', '600580', '600582',
            '600583', '600597', '600598', '600637', '600642', '600655', '600663', '600673', '600699', '600704',
            '600707', '600737', '600739', '600755', '600764', '600765', '600801', '600808', '600820', '600827',
            '600839', '600848', '600859', '600862', '600863', '600867', '600871', '600873', '600879', '600884',
            '600885', '600895', '600901', '600906', '600909', '600925', '600927', '600928', '600956', '600959',
            '600967', '600968', '600970', '600977', '600985', '600988', '600995', '600998', '601000', '601016',
            '601058', '601061', '601077', '601098', '601106', '601108', '601118', '601128', '601139', '601156',
            '601158', '601162', '601168', '601179', '601187', '601198', '601216', '601228', '601231', '601233',
            '601298', '601456', '601555', '601568', '601577', '601598', '601608', '601611', '601636', '601665',
            '601666', '601696', '601717', '601778', '601828', '601866', '601880', '601928', '601933', '601958',
            '601966', '601990', '601991', '601992', '601997', '603000', '603026', '603056', '603077', '603127',
            '603156', '603160', '603185', '603218', '603225', '603228', '603233', '603267', '603305', '603317',
            '603338', '603355', '603379', '603444', '603456', '603517', '603529', '603568', '603589', '603596',
            '603606', '603650', '603658', '603688', '603707', '603712', '603737', '603786', '603816', '603826',
            '603858', '603866', '603868', '603882', '603883', '603885', '603893', '603927', '603939', '605358',
            '688002', '688005', '688006', '688029', '688032', '688052', '688063', '688072', '688082', '688099',
            '688105', '688107', '688114', '688120', '688122', '688153', '688169', '688180', '688188', '688200',
            '688208', '688220', '688234', '688248', '688276', '688281', '688295', '688297', '688301', '688331',
            '688348', '688349', '688375', '688385', '688387', '688390', '688425', '688516', '688520', '688521',
            '688536', '688538', '688567', '688690', '688728', '688772', '688778', '688779', '688819', '689009'
        ]
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]
        return self.computeBoDuan(data)

    def zt1000(self):
        """
        对中小板复盘
        :return:
        """
        data = self.data["zt1000"]
        if len(self.data["zt1000"]) == 0:
            data = self.data["zt1000"] = rediangainnian.zhishu("1.000852")
        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # print(self.dates)
        self.codeList = [
            '000006', '000012', '000016', '000019', '000025', '000028', '000029', '000030', '000032', '000034',
            '000035', '000048', '000049', '000058', '000059', '000061', '000062', '000065', '000088', '000090',
            '000403', '000415', '000420', '000422', '000426', '000488', '000498', '000503', '000517', '000528',
            '000543', '000550', '000552', '000555', '000557', '000560', '000567', '000582', '000597', '000600',
            '000603', '000627', '000650', '000657', '000672', '000676', '000681', '000682', '000685', '000686',
            '000688', '000690', '000712', '000718', '000719', '000727', '000735', '000736', '000737', '000756',
            '000758', '000761', '000762', '000767', '000789', '000791', '000795', '000801', '000810', '000811',
            '000813', '000818', '000821', '000828', '000829', '000837', '000848', '000851', '000860', '000869',
            '000875', '000881', '000885', '000901', '000902', '000913', '000915', '000917', '000921', '000923',
            '000927', '000928', '000935', '000950', '000951', '000966', '000968', '000969', '000982', '000989',
            '000990', '001213', '001236', '001258', '001269', '001270', '001287', '001301', '001308', '001311',
            '001322', '001323', '001337', '001338', '001696', '002003', '002004', '002006', '002011', '002015',
            '002020', '002023', '002034', '002036', '002038', '002041', '002043', '002048', '002051', '002053',
            '002060', '002061', '002063', '002068', '002077', '002079', '002081', '002085', '002088', '002091',
            '002096', '002097', '002099', '002100', '002101', '002108', '002123', '002124', '002125', '002126',
            '002127', '002130', '002135', '002139', '002145', '002151', '002158', '002163', '002171', '002174',
            '002176', '002182', '002183', '002190', '002191', '002194', '002201', '002204', '002206', '002212',
            '002214', '002215', '002216', '002217', '002218', '002219', '002221', '002222', '002226', '002233',
            '002237', '002239', '002242', '002243', '002245', '002249', '002250', '002254', '002258', '002261',
            '002265', '002267', '002274', '002275', '002276', '002283', '002287', '002291', '002292', '002302',
            '002307', '002312', '002314', '002317', '002318', '002320', '002324', '002332', '002335', '002349',
            '002351', '002354', '002378', '002389', '002390', '002396', '002400', '002402', '002405', '002416',
            '002421', '002424', '002428', '002434', '002436', '002440', '002446', '002453', '002456', '002458',
            '002461', '002467', '002484', '002488', '002489', '002498', '002516', '002534', '002537', '002539',
            '002541', '002544', '002545', '002549', '002550', '002556', '002567', '002573', '002581', '002583',
            '002585', '002597', '002605', '002610', '002612', '002617', '002626', '002635', '002643', '002645',
            '002646', '002649', '002651', '002675', '002677', '002697', '002698', '002701', '002705', '002706',
            '002724', '002726', '002727', '002737', '002741', '002745', '002746', '002747', '002768', '002773',
            '002777', '002782', '002807', '002815', '002832', '002837', '002838', '002839', '002840', '002847',
            '002851', '002859', '002866', '002891', '002895', '002901', '002906', '002911', '002913', '002918',
            '002928', '002929', '002932', '002941', '002946', '002948', '002950', '002959', '002960', '002961',
            '002967', '002978', '002979', '002984', '002985', '002987', '002990', '002991', '002993', '003006',
            '003009', '003012', '003021', '003039', '003040', '300002', '300027', '300031', '300034', '300035',
            '300036', '300039', '300054', '300065', '300068', '300075', '300077', '300079', '300080', '300083',
            '300085', '300087', '300101', '300109', '300113', '300119', '300123', '300130', '300133', '300134',
            '300143', '300151', '300158', '300166', '300170', '300171', '300180', '300182', '300183', '300185',
            '300188', '300203', '300206', '300208', '300224', '300226', '300229', '300232', '300233', '300236',
            '300260', '300261', '300263', '300267', '300271', '300284', '300294', '300298', '300303', '300315',
            '300319', '300323', '300327', '300332', '300339', '300343', '300346', '300348', '300352', '300358',
            '300366', '300369', '300377', '300379', '300382', '300393', '300398', '300401', '300406', '300409',
            '300416', '300428', '300432', '300443', '300451', '300455', '300456', '300457', '300458', '300459',
            '300463', '300470', '300475', '300476', '300482', '300497', '300525', '300527', '300567', '300573',
            '300579', '300587', '300593', '300596', '300598', '300602', '300613', '300618', '300620', '300623',
            '300624', '300627', '300630', '300633', '300634', '300638', '300639', '300653', '300655', '300662',
            '300663', '300666', '300671', '300672', '300674', '300679', '300685', '300687', '300693', '300696',
            '300702', '300723', '300725', '300726', '300735', '300737', '300738', '300741', '300747', '300755',
            '300761', '300762', '300765', '300767', '300768', '300770', '300772', '300773', '300775', '300777',
            '300783', '300792', '300803', '300811', '300820', '300821', '300827', '300841', '300855', '300856',
            '300860', '300869', '300887', '300894', '300910', '300953', '300973', '301015', '301031', '301035',
            '301039', '301047', '301050', '301060', '301069', '301071', '301078', '301080', '301087', '301089',
            '301090', '301095', '301153', '301155', '301165', '301171', '301175', '301177', '301180', '301200',
            '301205', '301207', '301216', '301217', '301219', '301238', '301239', '301246', '301262', '301267',
            '301268', '301286', '301291', '301293', '301301', '301308', '301316', '301325', '301327', '301358',
            '301363', '301367', '301376', '301381', '600006', '600007', '600012', '600017', '600037', '600055',
            '600057', '600058', '600059', '600063', '600064', '600072', '600073', '600075', '600098', '600100',
            '600110', '600116', '600120', '600123', '600125', '600138', '600151', '600158', '600163', '600169',
            '600172', '600179', '600185', '600195', '600197', '600201', '600206', '600210', '600211', '600216',
            '600217', '600223', '600225', '600246', '600248', '600252', '600259', '600266', '600267', '600273',
            '600277', '600284', '600285', '600295', '600305', '600312', '600313', '600320', '600323', '600328',
            '600330', '600331', '600335', '600338', '600340', '600360', '600361', '600363', '600366', '600389',
            '600391', '600395', '600400', '600403', '600409', '600420', '600422', '600428', '600446', '600449',
            '600452', '600456', '600458', '600459', '600475', '600477', '600478', '600480', '600483', '600490',
            '600491', '600496', '600502', '600507', '600508', '600510', '600531', '600550', '600552', '600556',
            '600557', '600559', '600562', '600572', '600575', '600577', '600578', '600586', '600587', '600595',
            '600596', '600601', '600602', '600604', '600610', '600612', '600618', '600621', '600623', '600633',
            '600635', '600639', '600641', '600643', '600645', '600648', '600649', '600657', '600662', '600667',
            '600675', '600682', '600685', '600688', '600691', '600696', '600710', '600711', '600717', '600718',
            '600720', '600728', '600729', '600740', '600750', '600751', '600761', '600770', '600771', '600773',
            '600775', '600776', '600777', '600780', '600782', '600783', '600787', '600797', '600810', '600811',
            '600812', '600821', '600835', '600850', '600861', '600864', '600869', '600872', '600874', '600876',
            '600877', '600882', '600888', '600903', '600908', '600916', '600929', '600933', '600955', '600963',
            '600966', '600971', '600976', '600986', '600993', '600996', '600997', '601001', '601011', '601015',
            '601019', '601022', '601028', '601068', '601069', '601099', '601101', '601126', '601137', '601163',
            '601200', '601208', '601212', '601222', '601279', '601311', '601326', '601330', '601333', '601369',
            '601375', '601399', '601515', '601519', '601528', '601567', '601606', '601609', '601619', '601677',
            '601678', '601702', '601718', '601777', '601801', '601811', '601858', '601860', '601869', '601882',
            '601886', '601890', '601908', '601918', '601921', '601949', '601952', '601963', '601965', '601969',
            '601975', '603005', '603008', '603010', '603013', '603025', '603027', '603032', '603033', '603043',
            '603055', '603057', '603063', '603071', '603083', '603087', '603093', '603098', '603100', '603103',
            '603105', '603108', '603113', '603118', '603123', '603128', '603129', '603132', '603162', '603169',
            '603170', '603171', '603179', '603187', '603197', '603208', '603212', '603229', '603236', '603279',
            '603281', '603297', '603298', '603299', '603300', '603301', '603306', '603308', '603323', '603328',
            '603348', '603363', '603368', '603393', '603396', '603439', '603466', '603477', '603489', '603505',
            '603530', '603533', '603556', '603565', '603566', '603567', '603583', '603588', '603595', '603599',
            '603609', '603612', '603636', '603638', '603666', '603678', '603690', '603693', '603699', '603713',
            '603718', '603719', '603728', '603730', '603733', '603766', '603801', '603871', '603876', '603877',
            '603881', '603888', '603896', '603906', '603915', '603919', '603920', '603936', '603938', '603979',
            '603983', '603985', '603989', '603995', '603997', '605009', '605020', '605090', '605111', '605123',
            '605168', '605222', '605333', '605338', '605365', '605369', '605376', '605507', '605589', '688001',
            '688007', '688016', '688017', '688018', '688019', '688023', '688027', '688031', '688033', '688037',
            '688046', '688048', '688050', '688066', '688083', '688088', '688091', '688097', '688100', '688106',
            '688110', '688116', '688123', '688127', '688128', '688131', '688133', '688139', '688152', '688158',
            '688161', '688166', '688167', '688173', '688185', '688190', '688192', '688198', '688202', '688206',
            '688209', '688213', '688232', '688235', '688238', '688239', '688261', '688262', '688266', '688268',
            '688270', '688275', '688278', '688289', '688298', '688315', '688318', '688321', '688322', '688326',
            '688327', '688333', '688337', '688339', '688351', '688356', '688366', '688368', '688372', '688380',
            '688381', '688383', '688388', '688389', '688392', '688400', '688403', '688408', '688409', '688439',
            '688499', '688508', '688518', '688526', '688556', '688559', '688568', '688575', '688578', '688586',
            '688596', '688598', '688608', '688617', '688630', '688639', '688660', '688676', '688680', '688686',
            '688696', '688700', '688707', '688711', '688733', '688739', '688776', '688789', '688798', '688800'
        ]
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]
        return self.computeBoDuan(data)

    def zt2000(self):
        """
        对中小板复盘
        :return:
        """
        data = self.data["zt2000"]
        if len(self.data["zt2000"]) == 0:
            data = self.data["zt2000"] = rediangainnian.zhishu("2.932000")
        self.dates = [item.split(",")[0] for item in data if
                      item.split(",")[0].replace("-", "") <= self.date]
        # print(self.dates)
        self.codeList = [
            '000010', '000011', '000014', '000026', '000036', '000037', '000040', '000042', '000045', '000055',
            '000068', '000070', '000078', '000099', '000151', '000153', '000159', '000404', '000407', '000409',
            '000411', '000417', '000419', '000421', '000428', '000501', '000505', '000506', '000507', '000509',
            '000510', '000514', '000518', '000520', '000521', '000523', '000524', '000529', '000530', '000531',
            '000532', '000533', '000534', '000541', '000544', '000548', '000551', '000554', '000558', '000561',
            '000570', '000576', '000589', '000592', '000593', '000601', '000607', '000610', '000612', '000626',
            '000628', '000631', '000633', '000635', '000652', '000655', '000659', '000663', '000670', '000677',
            '000680', '000698', '000700', '000701', '000705', '000707', '000713', '000715', '000716', '000717',
            '000721', '000722', '000726', '000731', '000751', '000753', '000755', '000757', '000766', '000777',
            '000779', '000782', '000788', '000790', '000793', '000797', '000798', '000803', '000812', '000815',
            '000816', '000819', '000822', '000823', '000833', '000836', '000838', '000850', '000852', '000859',
            '000861', '000862', '000863', '000880', '000882', '000886', '000888', '000892', '000897', '000899',
            '000900', '000905', '000906', '000908', '000910', '000911', '000912', '000919', '000920', '000922',
            '000925', '000926', '000931', '000936', '000948', '000949', '000952', '000955', '000957', '000962',
            '000965', '000973', '000978', '000993', '001201', '001205', '001208', '001212', '001215', '001217',
            '001219', '001222', '001223', '001228', '001229', '001234', '001238', '001255', '001256', '001266',
            '001267', '001268', '001282', '001283', '001298', '001299', '001300', '001309', '001313', '001314',
            '001316', '001317', '001318', '001319', '001324', '001328', '001331', '001332', '001333', '001339',
            '001360', '001380', '001896', '002009', '002012', '002014', '002016', '002017', '002022', '002026',
            '002029', '002031', '002033', '002035', '002037', '002039', '002040', '002042', '002045', '002046',
            '002047', '002055', '002057', '002059', '002062', '002066', '002073', '002075', '002082', '002083',
            '002084', '002090', '002093', '002094', '002095', '002102', '002103', '002104', '002106', '002107',
            '002111', '002112', '002115', '002116', '002117', '002119', '002122', '002132', '002133', '002136',
            '002137', '002140', '002141', '002146', '002148', '002149', '002150', '002154', '002160', '002161',
            '002162', '002164', '002165', '002166', '002167', '002169', '002170', '002172', '002175', '002178',
            '002181', '002184', '002186', '002187', '002189', '002196', '002197', '002198', '002208', '002210',
            '002213', '002225', '002227', '002231', '002232', '002235', '002238', '002246', '002248', '002253',
            '002255', '002263', '002264', '002269', '002270', '002272', '002277', '002279', '002282', '002284',
            '002285', '002286', '002288', '002290', '002293', '002296', '002297', '002298', '002300', '002301',
            '002303', '002305', '002306', '002308', '002315', '002322', '002323', '002327', '002328', '002329',
            '002330', '002331', '002333', '002334', '002337', '002338', '002339', '002342', '002343', '002344',
            '002345', '002346', '002348', '002350', '002358', '002360', '002361', '002362', '002363', '002364',
            '002365', '002367', '002369', '002374', '002375', '002376', '002377', '002379', '002380', '002386',
            '002388', '002391', '002393', '002394', '002395', '002397', '002398', '002401', '002404', '002406',
            '002412', '002418', '002419', '002420', '002431', '002435', '002437', '002438', '002441', '002442',
            '002443', '002445', '002448', '002449', '002451', '002452', '002454', '002455', '002457', '002462',
            '002469', '002471', '002474', '002476', '002478', '002479', '002480', '002483', '002486', '002491',
            '002492', '002495', '002510', '002512', '002514', '002515', '002519', '002520', '002522', '002523',
            '002524', '002526', '002527', '002529', '002533', '002536', '002538', '002540', '002543', '002546',
            '002547', '002548', '002551', '002552', '002553', '002554', '002559', '002560', '002561', '002562',
            '002565', '002566', '002570', '002571', '002575', '002576', '002577', '002578', '002579', '002580',
            '002584', '002587', '002588', '002589', '002590', '002593', '002598', '002599', '002606', '002609',
            '002611', '002613', '002614', '002615', '002616', '002621', '002622', '002623', '002627', '002628',
            '002630', '002631', '002632', '002634', '002636', '002638', '002639', '002640', '002641', '002642',
            '002644', '002650', '002654', '002655', '002658', '002659', '002660', '002661', '002662', '002663',
            '002664', '002666', '002667', '002669', '002671', '002676', '002678', '002679', '002681', '002682',
            '002685', '002686', '002687', '002689', '002693', '002694', '002695', '002702', '002703', '002707',
            '002708', '002712', '002716', '002722', '002723', '002725', '002728', '002729', '002730', '002731',
            '002732', '002733', '002734', '002735', '002750', '002752', '002757', '002758', '002759', '002760',
            '002762', '002765', '002766', '002769', '002771', '002772', '002783', '002785', '002786', '002787',
            '002788', '002790', '002792', '002795', '002796', '002799', '002801', '002803', '002805', '002813',
            '002817', '002818', '002819', '002823', '002824', '002825', '002827', '002829', '002833', '002835',
            '002843', '002845', '002846', '002849', '002852', '002853', '002858', '002860', '002863', '002864',
            '002869', '002870', '002871', '002873', '002875', '002876', '002877', '002878', '002879', '002880',
            '002881', '002882', '002885', '002886', '002887', '002889', '002892', '002896', '002897', '002900',
            '002902', '002903', '002905', '002907', '002908', '002909', '002912', '002915', '002917', '002919',
            '002922', '002923', '002927', '002930', '002933', '002935', '002937', '002940', '002943', '002947',
            '002949', '002952', '002953', '002955', '002956', '002957', '002962', '002965', '002968', '002969',
            '002970', '002971', '002972', '002975', '002976', '002977', '002980', '002981', '002982', '002983',
            '002988', '002989', '002995', '002996', '002997', '002999', '003000', '003002', '003005', '003007',
            '003011', '003015', '003016', '003019', '003020', '003025', '003026', '003027', '003028', '003029',
            '003030', '003032', '003033', '003037', '003038', '003042', '003043', '300005', '300007', '300008',
            '300011', '300018', '300019', '300020', '300021', '300025', '300032', '300040', '300041', '300042',
            '300046', '300047', '300048', '300049', '300052', '300053', '300055', '300056', '300057', '300061',
            '300062', '300063', '300066', '300071', '300081', '300082', '300086', '300092', '300093', '300094',
            '300095', '300098', '300099', '300100', '300105', '300110', '300111', '300112', '300117', '300120',
            '300121', '300125', '300127', '300129', '300131', '300135', '300137', '300138', '300139', '300140',
            '300145', '300147', '300148', '300149', '300153', '300160', '300161', '300162', '300164', '300165',
            '300172', '300173', '300174', '300176', '300179', '300181', '300184', '300189', '300192', '300193',
            '300194', '300195', '300196', '300200', '300211', '300213', '300217', '300219', '300221', '300225',
            '300227', '300228', '300231', '300237', '300238', '300239', '300240', '300241', '300245', '300246',
            '300247', '300248', '300249', '300250', '300252', '300255', '300258', '300259', '300264', '300265',
            '300272', '300275', '300276', '300278', '300279', '300280', '300283', '300286', '300288', '300289',
            '300290', '300291', '300292', '300293', '300299', '300300', '300302', '300304', '300305', '300306',
            '300307', '300310', '300314', '300317', '300318', '300320', '300326', '300328', '300331', '300335',
            '300337', '300340', '300341', '300342', '300344', '300345', '300349', '300350', '300351', '300353',
            '300354', '300355', '300359', '300360', '300365', '300374', '300375', '300378', '300380', '300381',
            '300384', '300389', '300391', '300396', '300399', '300400', '300402', '300403', '300404', '300410',
            '300412', '300414', '300415', '300420', '300421', '300424', '300425', '300426', '300429', '300430',
            '300434', '300435', '300436', '300437', '300439', '300440', '300441', '300444', '300446', '300447',
            '300448', '300452', '300453', '300460', '300465', '300466', '300467', '300468', '300469', '300471',
            '300472', '300473', '300479', '300480', '300481', '300483', '300484', '300485', '300486', '300488',
            '300489', '300490', '300491', '300493', '300494', '300499', '300500', '300501', '300503', '300504',
            '300505', '300506', '300507', '300508', '300510', '300511', '300513', '300514', '300515', '300516',
            '300517', '300518', '300519', '300520', '300522', '300523', '300531', '300532', '300533', '300534',
            '300536', '300537', '300538', '300539', '300540', '300541', '300542', '300543', '300545', '300546',
            '300547', '300548', '300550', '300551', '300553', '300556', '300559', '300560', '300561', '300565',
            '300566', '300569', '300570', '300571', '300572', '300575', '300576', '300578', '300580', '300581',
            '300582', '300584', '300585', '300586', '300589', '300590', '300592', '300600', '300603', '300605',
            '300607', '300608', '300610', '300612', '300614', '300615', '300616', '300617', '300619', '300622',
            '300629', '300631', '300632', '300636', '300642', '300643', '300645', '300647', '300648', '300649',
            '300650', '300651', '300654', '300656', '300660', '300664', '300667', '300673', '300678', '300680',
            '300681', '300683', '300684', '300686', '300688', '300690', '300691', '300692', '300697', '300698',
            '300700', '300705', '300706', '300707', '300708', '300710', '300711', '300712', '300713', '300718',
            '300719', '300721', '300722', '300727', '300729', '300730', '300731', '300732', '300733', '300739',
            '300740', '300745', '300752', '300756', '300757', '300758', '300766', '300771', '300774', '300778',
            '300779', '300781', '300785', '300786', '300787', '300788', '300790', '300791', '300793', '300795',
            '300796', '300797', '300802', '300806', '300809', '300812', '300813', '300814', '300815', '300817',
            '300818', '300825', '300828', '300829', '300830', '300831', '300833', '300835', '300839', '300840',
            '300842', '300843', '300847', '300848', '300852', '300853', '300857', '300858', '300863', '300867',
            '300870', '300871', '300872', '300873', '300875', '300878', '300879', '300880', '300881', '300882',
            '300884', '300890', '300892', '300893', '300895', '300898', '300900', '300902', '300903', '300908',
            '300909', '300911', '300913', '300916', '300917', '300918', '300921', '300922', '300925', '300926',
            '300928', '300933', '300937', '300938', '300939', '300940', '300941', '300943', '300945', '300946',
            '300950', '300951', '300958', '300959', '300962', '300963', '300964', '300966', '300967', '300968',
            '300969', '300972', '300975', '300976', '300978', '300982', '300985', '300986', '300987', '300988',
            '300989', '300990', '300993', '300994', '300996', '300997', '300998', '301004', '301009', '301011',
            '301012', '301013', '301017', '301018', '301021', '301025', '301026', '301030', '301033', '301038',
            '301041', '301046', '301048', '301051', '301052', '301058', '301059', '301061', '301062', '301063',
            '301066', '301072', '301073', '301076', '301082', '301085', '301086', '301088', '301091', '301092',
            '301093', '301096', '301099', '301100', '301101', '301102', '301103', '301109', '301110', '301111',
            '301112', '301115', '301116', '301117', '301118', '301119', '301120', '301121', '301122', '301123',
            '301126', '301127', '301128', '301129', '301130', '301132', '301133', '301135', '301136', '301137',
            '301138', '301139', '301141', '301149', '301150', '301151', '301152', '301158', '301159', '301160',
            '301161', '301162', '301166', '301168', '301169', '301170', '301172', '301179', '301181', '301183',
            '301185', '301186', '301187', '301188', '301191', '301195', '301197', '301198', '301199', '301201',
            '301202', '301206', '301208', '301210', '301211', '301212', '301213', '301215', '301218', '301221',
            '301223', '301225', '301226', '301227', '301229', '301230', '301235', '301248', '301252', '301255',
            '301256', '301257', '301258', '301261', '301263', '301265', '301266', '301270', '301272', '301273',
            '301276', '301277', '301278', '301279', '301280', '301281', '301282', '301283', '301285', '301289',
            '301290', '301292', '301296', '301297', '301299', '301302', '301303', '301305', '301306', '301307',
            '301310', '301311', '301312', '301313', '301315', '301317', '301318', '301319', '301320', '301322',
            '301323', '301326', '301328', '301329', '301330', '301331', '301332', '301333', '301337', '301338',
            '301339', '301345', '301349', '301355', '301356', '301357', '301360', '301361', '301365', '301366',
            '301368', '301369', '301370', '301373', '301377', '301379', '301380', '301382', '301383', '301386',
            '301387', '301388', '301389', '301391', '301393', '301396', '301397', '301398', '301399', '301408',
            '301419', '301428', '301439', '301456', '301468', '301486', '301488', '301499', '301505', '301515',
            '301519', '600020', '600033', '600035', '600053', '600054', '600067', '600071', '600080', '600081',
            '600084', '600088', '600094', '600101', '600103', '600105', '600106', '600108', '600113', '600114',
            '600121', '600127', '600130', '600133', '600135', '600152', '600159', '600162', '600165', '600173',
            '600178', '600180', '600184', '600186', '600187', '600189', '600190', '600198', '600200', '600203',
            '600207', '600212', '600213', '600215', '600218', '600220', '600222', '600226', '600228', '600229',
            '600230', '600237', '600238', '600239', '600249', '600251', '600255', '600257', '600268', '600269',
            '600278', '600280', '600283', '600288', '600292', '600293', '600300', '600301', '600308', '600310',
            '600318', '600327', '600336', '600345', '600351', '600353', '600354', '600358', '600359', '600367',
            '600368', '600371', '600375', '600379', '600386', '600397', '600405', '600408', '600410', '600419',
            '600425', '600429', '600433', '600461', '600467', '600468', '600469', '600470', '600476', '600479',
            '600488', '600495', '600501', '600503', '600505', '600509', '600512', '600513', '600523', '600525',
            '600526', '600533', '600537', '600540', '600545', '600551', '600558', '600560', '600565', '600571',
            '600573', '600576', '600590', '600594', '600605', '600609', '600611', '600613', '600616', '600617',
            '600619', '600620', '600622', '600624', '600629', '600630', '600636', '600638', '600640', '600644',
            '600651', '600653', '600658', '600661', '600664', '600665', '600668', '600683', '600684', '600686',
            '600693', '600694', '600698', '600706', '600708', '600713', '600716', '600721', '600730', '600731',
            '600735', '600736', '600738', '600742', '600744', '600749', '600753', '600756', '600757', '600758',
            '600769', '600774', '600784', '600785', '600789', '600790', '600792', '600794', '600798', '600802',
            '600807', '600814', '600817', '600818', '600819', '600822', '600825', '600826', '600829', '600830',
            '600831', '600833', '600836', '600838', '600846', '600851', '600853', '600854', '600855', '600858',
            '600860', '600866', '600868', '600880', '600892', '600894', '600897', '600939', '600960', '600961',
            '600962', '600965', '600969', '600973', '600979', '600980', '600981', '600982', '600987', '600992',
            '601007', '601008', '601020', '601038', '601065', '601086', '601089', '601116', '601121', '601133',
            '601177', '601188', '601199', '601226', '601339', '601388', '601500', '601518', '601566', '601579',
            '601588', '601595', '601599', '601616', '601700', '601789', '601798', '601929', '601956', '601968',
            '601999', '603002', '603003', '603009', '603011', '603012', '603015', '603017', '603018', '603028',
            '603029', '603035', '603040', '603050', '603051', '603052', '603058', '603060', '603061', '603065',
            '603066', '603067', '603069', '603070', '603076', '603078', '603081', '603085', '603086', '603088',
            '603090', '603096', '603097', '603102', '603106', '603109', '603110', '603122', '603125', '603126',
            '603130', '603131', '603135', '603136', '603138', '603151', '603153', '603158', '603163', '603165',
            '603168', '603173', '603176', '603177', '603178', '603180', '603181', '603182', '603186', '603189',
            '603190', '603191', '603199', '603200', '603203', '603206', '603209', '603211', '603213', '603214',
            '603215', '603217', '603219', '603220', '603222', '603223', '603227', '603230', '603232', '603237',
            '603239', '603255', '603256', '603258', '603261', '603266', '603277', '603280', '603282', '603283',
            '603289', '603291', '603303', '603307', '603309', '603311', '603313', '603315', '603318', '603319',
            '603322', '603324', '603327', '603329', '603330', '603333', '603335', '603336', '603339', '603357',
            '603358', '603359', '603360', '603366', '603367', '603377', '603378', '603380', '603383', '603386',
            '603387', '603388', '603398', '603399', '603416', '603421', '603429', '603496', '603507', '603508',
            '603516', '603518', '603519', '603520', '603527', '603528', '603538', '603551', '603558', '603569',
            '603578', '603590', '603598', '603601', '603602', '603610', '603611', '603617', '603618', '603619',
            '603626', '603628', '603629', '603630', '603633', '603639', '603648', '603655', '603660', '603662',
            '603663', '603665', '603667', '603668', '603676', '603681', '603686', '603687', '603689', '603697',
            '603698', '603701', '603703', '603708', '603711', '603722', '603727', '603738', '603755', '603757',
            '603758', '603767', '603768', '603776', '603777', '603778', '603779', '603787', '603800', '603808',
            '603809', '603810', '603811', '603815', '603817', '603818', '603822', '603823', '603825', '603836',
            '603843', '603848', '603855', '603856', '603859', '603861', '603867', '603869', '603878', '603886',
            '603887', '603889', '603890', '603897', '603901', '603908', '603912', '603916', '603917', '603918',
            '603929', '603931', '603933', '603937', '603948', '603949', '603950', '603959', '603960', '603966',
            '603968', '603969', '603970', '603977', '603982', '603987', '603990', '603998', '603999', '605011',
            '605016', '605060', '605066', '605068', '605077', '605088', '605089', '605098', '605108', '605116',
            '605118', '605128', '605133', '605138', '605151', '605162', '605167', '605179', '605186', '605188',
            '605196', '605198', '605199', '605208', '605218', '605228', '605266', '605268', '605277', '605286',
            '605289', '605299', '605300', '605305', '605319', '605336', '605337', '605366', '605368', '605377',
            '605388', '605389', '605398', '605399', '605555', '605567', '605577', '605598', '605599', '688003',
            '688010', '688015', '688020', '688022', '688025', '688030', '688035', '688039', '688045', '688049',
            '688051', '688053', '688058', '688059', '688061', '688062', '688068', '688071', '688073', '688075',
            '688076', '688077', '688078', '688079', '688080', '688085', '688087', '688089', '688095', '688102',
            '688103', '688108', '688112', '688117', '688119', '688121', '688125', '688132', '688135', '688136',
            '688137', '688138', '688148', '688150', '688156', '688157', '688160', '688162', '688165', '688168',
            '688170', '688176', '688179', '688181', '688182', '688183', '688186', '688189', '688191', '688195',
            '688197', '688199', '688201', '688205', '688207', '688212', '688216', '688221', '688222', '688225',
            '688226', '688227', '688228', '688230', '688231', '688233', '688236', '688244', '688246', '688247',
            '688252', '688255', '688258', '688259', '688267', '688269', '688273', '688277', '688279', '688282',
            '688283', '688286', '688287', '688292', '688293', '688299', '688300', '688302', '688305', '688306',
            '688308', '688311', '688313', '688317', '688319', '688320', '688323', '688329', '688330', '688332',
            '688338', '688345', '688353', '688355', '688357', '688358', '688359', '688365', '688369', '688371',
            '688373', '688377', '688378', '688382', '688386', '688391', '688398', '688399', '688401', '688416',
            '688418', '688426', '688456', '688459', '688468', '688488', '688501', '688505', '688509', '688510',
            '688519', '688533', '688550', '688553', '688558', '688560', '688566', '688569', '688579', '688580',
            '688588', '688589', '688590', '688595', '688597', '688600', '688601', '688606', '688609', '688613',
            '688618', '688621', '688626', '688628', '688636', '688658', '688659', '688661', '688662', '688663',
            '688665', '688667', '688668', '688670', '688677', '688678', '688682', '688687', '688697', '688698',
            '688699', '688722', '688766', '688767', '688768', '688786', '688787', '688788', '688793', '688799'
        ]
        data = [item.split(",")[1] for item in data if
                item.split(",")[0].replace("-", "") <= self.date]
        return self.computeBoDuan(data)
