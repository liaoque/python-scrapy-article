# Generated by Django 3.2.19 on 2023-12-19 02:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('shares', '0021_stockindex_val'),
    ]

    operations = [
        migrations.AddField(
            model_name='shares',
            name='p_range_win',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg10',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg10_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg120',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg120_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg20',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg200',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg200_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg20_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg30',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg30_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg60',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg60_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg_p_max_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='avg_p_min_rate',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='macd',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='max_min_flag',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='p_range',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustry',
            name='p_range_win',
            field=models.FloatField(default=0),
        ),
        migrations.AddField(
            model_name='sharesindustrymonth',
            name='avg5',
            field=models.BigIntegerField(default=0, help_text='月'),
        ),
        migrations.AddField(
            model_name='sharesmonth',
            name='buy_count',
            field=models.IntegerField(default=0, help_text='交易量， 单位万'),
        ),
        migrations.AddField(
            model_name='sharesmonth',
            name='buy_sum',
            field=models.IntegerField(default=0, help_text='交易金额， 单位万'),
        ),
        migrations.AlterField(
            model_name='sharescache',
            name='id',
            field=models.IntegerField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='sharescache',
            name='title',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterField(
            model_name='sharesindustrymonth',
            name='p_month',
            field=models.IntegerField(default=0, help_text='月'),
        ),
        migrations.AlterField(
            model_name='stockindex',
            name='pb',
            field=models.FloatField(default=0, help_text='市净率 '),
        ),
        migrations.AlterField(
            model_name='stockindex',
            name='pe',
            field=models.FloatField(default=0, help_text='市盈率 '),
        ),
        migrations.AlterField(
            model_name='stockindex',
            name='val',
            field=models.FloatField(default=0, help_text='价值'),
        ),
        migrations.CreateModel(
            name='SharesZhangTings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('gn', models.TextField(help_text='概念')),
                ('hy', models.CharField(help_text='行业', max_length=50)),
                ('first_zhang_ting', models.TimeField(help_text='第一个涨停时间')),
                ('last_zhang_ting', models.TimeField(help_text='最后一个涨停时间')),
                ('n_day_n_zhang_ting', models.TimeField(help_text='几天几版')),
                ('continuous_zhang_ting', models.TimeField(help_text='连续涨停时间')),
                ('liu_tong_shi_zhi', models.TimeField(help_text='流通市值')),
                ('date_as', models.TimeField(help_text='创建时间')),
                ('f32', models.TimeField(help_text='9点32分钟之前涨停')),
                ('gao_biao', models.TimeField(help_text='高标票标记')),
                ('morning', models.TimeField(help_text='9点32分钟数据  1 是， 2不是')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_zhang_tings',
            },
        ),
        migrations.CreateModel(
            name='SharesWeeks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('p_min', models.IntegerField(default=0)),
                ('p_max', models.IntegerField(default=0)),
                ('p_start', models.IntegerField(default=0)),
                ('p_end', models.IntegerField(default=0)),
                ('date_as', models.DateField()),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_weeks',
            },
        ),
        migrations.CreateModel(
            name='SharesWeekMacds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('macd', models.FloatField(default=0)),
                ('diff', models.FloatField(default=0)),
                ('dea', models.FloatField(default=0)),
                ('cycle_type', models.IntegerField(default=0, help_text='1.26,12,9')),
                ('date_as', models.DateField()),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_macd_weeks',
            },
        ),
        migrations.CreateModel(
            name='SharesIndustryWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_min', models.IntegerField(default=0)),
                ('p_max', models.IntegerField(default=0)),
                ('p_start', models.IntegerField(default=0)),
                ('p_end', models.IntegerField(default=0)),
                ('macd', models.IntegerField(default=0)),
                ('avg_p_min_rate', models.FloatField(default=0)),
                ('avg_p_max_rate', models.FloatField(default=0)),
                ('max_min_flag', models.IntegerField(default=0)),
                ('date_as', models.DateField()),
                ('date_as_end', models.DateField()),
                ('date_week', models.IntegerField(default=0)),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_industry_week',
            },
        ),
        migrations.CreateModel(
            name='SharesIndustryFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='名字', max_length=200)),
                ('date_as', models.DateField(help_text='财报日期')),
                ('gpm', models.FloatField(default=0, help_text='毛利率 Gross Profit Margin')),
                ('npmos', models.FloatField(default=0, help_text='净利率 Net Profit Margin on Sales')),
                ('turnover_days', models.FloatField(default=0, help_text='总资产周转天数')),
                ('goods_turnover_days', models.FloatField(default=0, help_text='存货周转天数')),
                ('account_turnover_days', models.FloatField(default=0, help_text='应收账款周转天数')),
                ('turnover_rate', models.FloatField(default=0, help_text='总资产周转率')),
                ('goods_turnover_rate', models.FloatField(default=0, help_text='存货周转率')),
                ('account_turnover_rate', models.FloatField(default=0, help_text='应收账款周转率')),
                ('non_operating_incom', models.FloatField(default=0, help_text='营业外收入')),
                ('non_operating_expenses', models.FloatField(default=0, help_text='营业外支出')),
                ('income_from_investment', models.FloatField(default=0, help_text='投资收益')),
                ('notes_payable', models.FloatField(default=0, help_text='应付票据及应付账款')),
                ('notes_receivable', models.FloatField(default=0, help_text='应收票据及应收账款')),
                ('prepayment', models.FloatField(default=0, help_text='预付款项')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_industry_finance',
            },
        ),
        migrations.CreateModel(
            name='SharesFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='名字', max_length=200)),
                ('date_as', models.DateField(help_text='财报日期')),
                ('gpm', models.FloatField(default=0, help_text='毛利率 Gross Profit Margin')),
                ('npmos', models.FloatField(default=0, help_text='净利率 Net Profit Margin on Sales')),
                ('turnover_days', models.FloatField(default=0, help_text='总资产周转天数')),
                ('goods_turnover_days', models.FloatField(default=0, help_text='存货周转天数')),
                ('account_turnover_days', models.FloatField(default=0, help_text='应收账款周转天数')),
                ('turnover_rate', models.FloatField(default=0, help_text='总资产周转率')),
                ('goods_turnover_rate', models.FloatField(default=0, help_text='存货周转率')),
                ('account_turnover_rate', models.FloatField(default=0, help_text='应收账款周转率')),
                ('non_operating_incom', models.FloatField(default=0, help_text='营业外收入')),
                ('non_operating_expenses', models.FloatField(default=0, help_text='营业外支出')),
                ('income_from_investment', models.FloatField(default=0, help_text='投资收益')),
                ('notes_payable', models.FloatField(default=0, help_text='应付票据及应付账款')),
                ('notes_receivable', models.FloatField(default=0, help_text='应收票据及应收账款')),
                ('parentnetprofit', models.FloatField(default=0, help_text='归属净利润(元)')),
                ('kcfjcxsyjlr', models.FloatField(default=0, help_text='扣非净利润(元)')),
                ('prepayment', models.FloatField(default=0, help_text='预付款项')),
                ('companyType', models.FloatField(default=0, help_text='东方财富必须字段')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_finance',
            },
        ),
        migrations.CreateModel(
            name='SharesBlockGns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('p_min', models.IntegerField(help_text='最小')),
                ('p_max', models.IntegerField(help_text='最大')),
                ('p_start', models.IntegerField(help_text='开始')),
                ('p_end', models.IntegerField(help_text='结束')),
                ('p_zhang_die_fu', models.IntegerField(help_text='涨跌幅')),
                ('date_as', models.TimeField(help_text='创建时间')),
                ('morning', models.TimeField(help_text='9点32分钟数据  1 是， 2不是')),
                ('code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shares.sharesname')),
            ],
            options={
                'db_table': 'mc_shares_block_gns',
            },
        ),
    ]
